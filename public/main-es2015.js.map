{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/dashbord/dashbord.component.ts","./src/app/components/dashbord/dashbord.component.html","./src/app/components/home/home.component.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/guards/auth.guards.ts","./src/app/order/order.component.ts","./src/app/order/order.component.html","./src/app/services/auth.service.ts","./src/app/services/validate.service.ts","./src/app/shared/order.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'ekbana';\n}\n","<app-navbar></app-navbar>\n\n<div class=\"container\">\n  <flash-messages></flash-messages>\n\n\n  <router-outlet></router-outlet>\n</div>","import { AuthGuard } from './guards/auth.guards';\nimport { AuthService } from './services/auth.service';\nimport { ValidateService } from './services/validate.service';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n// import { FlashMessageModule } from 'angular-flash-message';.\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashbordComponent } from './components/dashbord/dashbord.component';\nimport { ProfileComponent } from './components/profile/profile.component';\n\nimport { OrderComponent } from './order/order.component';\n\nconst appRoutes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n  },\n  {\n    path: 'register',\n    component: RegisterComponent,\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n  {\n    path: 'dashbord',\n    component: DashbordComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'profile',\n    component: ProfileComponent,\n    canActivate: [AuthGuard],\n  },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashbordComponent,\n    ProfileComponent,\n    OrderComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes),\n    FlashMessagesModule.forRoot(),\n  ],\n  providers: [ValidateService, AuthService, AuthGuard],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashbord',\n  templateUrl: './dashbord.component.html',\n  styleUrls: ['./dashbord.component.css']\n})\nexport class DashbordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-order> </app-order>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n\n  dataRegister: any = {};\n\n  constructor(\n    private flashMessage: FlashMessagesService,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {}\n\n  onLoginSubmit() {\n    const user = {\n      username: this.username,\n      password: this.password,\n    };\n\n    this.authService.authenticateUser(user).subscribe((data) => {\n      this.dataRegister = data;\n      if (this.dataRegister.success) {\n        this.authService.storeUserData(\n          this.dataRegister.token,\n          this.dataRegister.user\n        );\n        this.flashMessage.show('You are now logged', {\n          cssClass: 'alert-success',\n          timeout: 3000,\n        });\n\n        this.router.navigate(['/dashbord']);\n      } else {\n        this.flashMessage.show(this.dataRegister.msg, {\n          cssClass: 'alert-danger',\n          timeout: 3000,\n        });\n        this.router.navigate(['/login']);\n      }\n    });\n  }\n}\n","<form class=\"form-signin\" (submit)=\"onLoginSubmit()\">\n    <h1 class=\"h3 mb-3 font-weight-normal\">Login</h1>\n\n\n    <label class=\"sr-only\">username</label>\n    <input type=\"username\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\" placeholder=\"username\" required\n        autofocus>\n\n\n    <label class=\"sr-only\">Password</label>\n    <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\" placeholder=\"Password\" required>\n\n    <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Login</button>\n\n</form>","import { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n})\nexport class NavbarComponent implements OnInit {\n  constructor(\n    private flashMessage: FlashMessagesService,\n    public authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {}\n  onLogoutClick() {\n    this.authService.logout();\n    this.flashMessage.show('You are logged out', {\n      cssClass: 'alert-success',\n      timeout: 3000,\n    });\n    this.router.navigate(['/login']);\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark mb-4\">\n    <a class=\"navbar-brand\" href=\"#\">Ekbana Task</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\"\n        aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n        <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item \" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['/']\">Home </a>\n            </li>\n\n\n        </ul>\n        <ul class=\"navbar-nav navbar-right\">\n            <li class=\"nav-item \" *ngIf=\"authService.loggedIn()\" [routerLinkActive]=\"['active']\"\n                [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['/dashbord']\">Dashbord </a>\n            </li>\n            <li class=\"nav-item \" *ngIf=\"authService.loggedIn()\" [routerLinkActive]=\"['active']\"\n                [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['/profile']\">Profile </a>\n            </li>\n            <li class=\"nav-item \" *ngIf=\"!authService.loggedIn()\" [routerLinkActive]=\"['active']\"\n                [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['/login']\">Login </a>\n            </li>\n            <li class=\"nav-item \" *ngIf=\"!authService.loggedIn()\" [routerLinkActive]=\"['active']\"\n                [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['/register']\">Register </a>\n            </li>\n            <li class=\"nav-item \" *ngIf=\"authService.loggedIn()\">\n                <a class=\"nav-link\" (click)=\"onLogoutClick()\" href=\"#\">Logout </a>\n            </li>\n\n\n        </ul>\n\n\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css'],\n})\nexport class ProfileComponent implements OnInit {\n  user: Object;\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(\n      (profile) => {\n        this.user = profile.user;\n      },\n      (err) => {\n        console.log(err);\n        return false;\n      }\n    );\n  }\n}\n","<!-- <div *ngIf=\"user\">\n    <h2 class=\"page-header\">{{user.name}}</h2>\n    <ul class=\"list-group\">\n        <li class=\"list-group-item\">Username : {{user.username}}</li>\n        <li class=\"list-group-item\">Email : {{user.email}}</li>\n    </ul>\n</div> -->\n\n<app-order> </app-order>","import { AuthService } from './../../services/auth.service';\nimport { ValidateService } from './../../services/validate.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent implements OnInit {\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n\n  dataRegister: any = {};\n\n  constructor(\n    private validateService: ValidateService,\n    private flashMessage: FlashMessagesService,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {}\n\n  onRegisterSubmit() {\n    const user = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password,\n    };\n\n    //require fields\n    if (!this.validateService.validateRegister(user)) {\n      this.flashMessage.show('Please fill in all fields', {\n        cssClass: 'alert-danger',\n        timeout: 3000,\n      });\n      return false;\n    }\n\n    //require emails\n    if (!this.validateService.validateEmail(user.email)) {\n      this.flashMessage.show('Give valid email', {\n        cssClass: 'alert-danger',\n        timeout: 3000,\n      });\n      return false;\n    }\n\n    //register user\n    this.authService.registerUser(user).subscribe((data) => {\n      this.dataRegister = data;\n\n      if (this.dataRegister.success) {\n        this.flashMessage.show('You are now registered and can login', {\n          cssClass: 'alert-success',\n          timeout: 3000,\n        });\n\n        this.router.navigate(['/login']);\n      } else {\n        this.flashMessage.show('Something went wrong', {\n          cssClass: 'alert-danger',\n          timeout: 3000,\n        });\n        this.router.navigate(['/register']);\n      }\n    });\n  }\n}\n","<form class=\"form-signin\" (submit)=\"onRegisterSubmit()\">\n    <h1 class=\"h3 mb-3 font-weight-normal\">Register</h1>\n\n\n    <label class=\"sr-only\">Name</label>\n    <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\" placeholder=\"Name\" required autofocus>\n\n\n    <label class=\"sr-only\">Username</label>\n    <input type=\"Username\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\" placeholder=\"Username\" required\n        autofocus>\n\n\n    <label class=\"sr-only\">Email address</label>\n    <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" placeholder=\"Email address\" required\n        autofocus>\n\n\n    <label class=\"sr-only\">Password</label>\n    <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\" placeholder=\"Password\" required>\n\n    <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Register</button>\n\n</form>","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor (private authService:AuthService, private router:Router){\n\n  }\n\n  canActivate() {\n    if(this.authService.loggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { OrderService } from '../shared/order.service';\nimport { Order } from '../shared/order.model';\n\ndeclare var M: any;\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.css'],\n  providers: [OrderService],\n})\nexport class OrderComponent implements OnInit {\n  constructor(public orderService: OrderService) {}\n\n  ngOnInit() {\n    this.resetForm();\n    this.refreshOrderList();\n  }\n\n  status: boolean = false;\n  btnText: string = 'Add Order';\n\n  showForm() {\n    if (this.status != false) {\n      this.btnText = 'Add Order';\n    } else {\n      this.btnText = 'Close';\n    }\n    this.status = !this.status;\n  }\n\n  resetForm(form?: NgForm) {\n    if (form) form.reset();\n    this.orderService.selectedOrder = {\n      _id: '',\n      productId: '',\n      productAmount: '',\n      userName: '',\n    };\n  }\n\n  onSubmit(form: NgForm) {\n    if (form.value._id == '') {\n      this.orderService.postOrder(form.value).subscribe((res) => {\n        this.resetForm(form);\n        this.refreshOrderList();\n        M.toast({ html: 'Saved successfully', classes: 'rounded' });\n      });\n    } else {\n      this.orderService.putOrder(form.value).subscribe((res) => {\n        this.resetForm(form);\n        this.refreshOrderList();\n        M.toast({ html: 'Updated successfully', classes: 'rounded' });\n      });\n    }\n  }\n\n  refreshOrderList() {\n    this.orderService.getOrderList().subscribe((res) => {\n      this.orderService.orders = res as Order[];\n    });\n  }\n\n  onEdit(ord: Order) {\n    this.orderService.selectedOrder = ord;\n  }\n\n  onDelete(_id: string, form: NgForm) {\n    if (confirm('Are you sure to Remove this order ?') == true) {\n      this.orderService.deleteOrder(_id).subscribe((res) => {\n        this.refreshOrderList();\n        this.resetForm(form);\n        M.toast({ html: 'Removed successfully', classes: 'rounded' });\n      });\n    }\n  }\n}\n","<div class=\"row\">\n    <div class=\"col s12\">\n        <div class=\"card\">\n            <div class=\"card-content white-text\">\n                <div class=\"row\">\n                    <div class=\"add-order h-flex h-flex-center \">\n                        <button class=\"btn btn-custom h-mb-40 \" type=\"submit\"\n                            (click)=\"showForm()\">{{this.btnText}}</button>\n                    </div>\n\n                    <div class=\"col s5\">\n                        <div [ngClass]=\"status ? 'h-visible' : 'h-hidden'\">\n\n                            <form #orderForm=\"ngForm\" (ngSubmit)=\"onSubmit(orderForm)\">\n                                <input type=\"hidden\" name=\"_id\" #_id=\"ngModel\"\n                                    [(ngModel)]=\"orderService.selectedOrder._id\">\n                                <div class=\"row\">\n                                    <div class=\"input-field col s12\">\n                                        <input type=\"text\" name=\"productId\" #name=\"ngModel\"\n                                            [(ngModel)]=\"orderService.selectedOrder.productId\"\n                                            placeholder=\"Give Product Id\" required>\n                                        <label>Product Id :\n                                            <label class=\"red-text\">*</label>\n                                        </label>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"input-field col s12\">\n                                        <input type=\"text\" name=\"productAmount\" #name=\"ngModel\"\n                                            [(ngModel)]=\"orderService.selectedOrder.productAmount\"\n                                            placeholder=\"how many?\">\n                                        <label>how many item :</label>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"input-field col s12\">\n                                        <input type=\"text\" name=\"userName\" #name=\"ngModel\"\n                                            [(ngModel)]=\"orderService.selectedOrder.userName\" placeholder=\"For Whom?\">\n                                        <label>User Name :</label>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"input-field col s12\">\n                                        <button class=\"btn btn-custom right\" type=\"button\"\n                                            (click)=\"resetForm(orderForm)\">Reset</button>\n                                        <button class=\"btn btn-custom right\" type=\"submit\"\n                                            [disabled]=\"!orderForm.valid\">Submit</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n\n\n                    <div class=\"col s7\">\n                        <table class=\"responsive-table highlight\">\n                            <thead>\n                                <tr>\n                                    <th>Product Id</th>\n                                    <th>Product Amount</th>\n                                    <th>To</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n                            <tr *ngFor=\"let ord of orderService.orders\">\n                                <td>{{ord.productId}}</td>\n                                <td>{{ord.productAmount}}</td>\n                                <td>{{ord.userName}}</td>\n                                <td>\n                                    <a class=\"action-btn\" (click)=\"onEdit(ord)\">\n                                        <i class=\"material-icons\">edit</i>\n                                    </a>\n                                    <a class=\"action-btn\" (click)=\"onDelete(ord._id,orderForm)\">\n                                        <i class=\"material-icons\">delete</i>\n                                    </a>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n\n  constructor(private http: HttpClient) {}\n\n  registerUser(user) {\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/register', user, {\n      headers: headers,\n    });\n  }\n  authenticateUser(user) {\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/authenticate', user, {\n      headers: headers,\n    });\n  }\n\n  getProfile(): any {\n    this.loadToken();\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: this.authToken,\n    });\n    return this.http.get('http://localhost:1000/users/profile', {\n      headers: headers,\n    });\n  }\n\n  storeUserData(token, user) {\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken() {\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  loggedIn() {\n    if (this.authToken != null) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ValidateService {\n  constructor() {}\n  validateRegister(user) {\n    if (\n      user.name == undefined ||\n      user.email == undefined ||\n      user.username == undefined ||\n      user.password == undefined\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\n\nimport { Order } from './order.model';\n\n@Injectable()\nexport class OrderService {\n  selectedOrder: Order;\n  orders: Order[];\n  readonly baseURL = 'http://localhost:3000/orders';\n\n  constructor(private http: HttpClient) { }\n\n  postOrder(ord: Order) {\n    return this.http.post(this.baseURL, ord);\n  }\n\n  getOrderList() {\n    return this.http.get(this.baseURL);\n  }\n\n  putOrder(ord: Order) {\n    return this.http.put(this.baseURL + `/${ord._id}`, ord);\n  }\n\n  deleteOrder(_id: string) {\n    return this.http.delete(this.baseURL + `/${_id}`);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}