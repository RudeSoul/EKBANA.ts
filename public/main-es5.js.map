{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/dashbord/dashbord.component.ts","webpack:///src/app/components/dashbord/dashbord.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/guards/auth.guards.ts","webpack:///src/app/order/order.component.ts","webpack:///src/app/order/order.component.html","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/validate.service.ts","webpack:///src/app/shared/order.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","appRoutes","path","component","canActivate","AppModule","declarations","providers","bootstrap","DashbordComponent","HomeComponent","LoginComponent","flashMessage","authService","router","dataRegister","user","username","password","authenticateUser","subscribe","data","success","storeUserData","token","show","cssClass","timeout","navigate","msg","onLoginSubmit","NavbarComponent","logout","ProfileComponent","getProfile","profile","err","console","log","RegisterComponent","validateService","name","email","validateRegister","validateEmail","registerUser","onRegisterSubmit","AuthGuard","loggedIn","OrderComponent","orderService","status","btnText","resetForm","refreshOrderList","form","reset","selectedOrder","_id","productId","productAmount","userName","value","postOrder","res","M","toast","html","classes","putOrder","getOrderList","orders","ord","confirm","deleteOrder","showForm","onSubmit","AuthService","http","headers","append","post","loadToken","Authorization","authToken","get","localStorage","setItem","JSON","stringify","getItem","clear","providedIn","ValidateService","undefined","re","test","String","toLowerCase","OrderService","baseURL","put","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'ekbana';\n}\n","<app-navbar></app-navbar>\n\n<div class=\"container\">\n  <flash-messages></flash-messages>\n\n\n  <router-outlet></router-outlet>\n</div>","import { AuthGuard } from './guards/auth.guards';\nimport { AuthService } from './services/auth.service';\nimport { ValidateService } from './services/validate.service';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n// import { FlashMessageModule } from 'angular-flash-message';.\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashbordComponent } from './components/dashbord/dashbord.component';\nimport { ProfileComponent } from './components/profile/profile.component';\n\nimport { OrderComponent } from './order/order.component';\n\nconst appRoutes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n  },\n  {\n    path: 'register',\n    component: RegisterComponent,\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n  {\n    path: 'dashbord',\n    component: DashbordComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'profile',\n    component: ProfileComponent,\n    canActivate: [AuthGuard],\n  },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashbordComponent,\n    ProfileComponent,\n    OrderComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes),\n    FlashMessagesModule.forRoot(),\n  ],\n  providers: [ValidateService, AuthService, AuthGuard],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashbord',\n  templateUrl: './dashbord.component.html',\n  styleUrls: ['./dashbord.component.css']\n})\nexport class DashbordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-order> </app-order>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n\n  dataRegister: any = {};\n\n  constructor(\n    private flashMessage: FlashMessagesService,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {}\n\n  onLoginSubmit() {\n    const user = {\n      username: this.username,\n      password: this.password,\n    };\n\n    this.authService.authenticateUser(user).subscribe((data) => {\n      this.dataRegister = data;\n      if (this.dataRegister.success) {\n        this.authService.storeUserData(\n          this.dataRegister.token,\n          this.dataRegister.user\n        );\n        this.flashMessage.show('You are now logged', {\n          cssClass: 'alert-success',\n          timeout: 3000,\n        });\n\n        this.router.navigate(['/dashbord']);\n      } else {\n        this.flashMessage.show(this.dataRegister.msg, {\n          cssClass: 'alert-danger',\n          timeout: 3000,\n        });\n        this.router.navigate(['/login']);\n      }\n    });\n  }\n}\n","<form class=\"form-signin\" (submit)=\"onLoginSubmit()\">\n    <h1 class=\"h3 mb-3 font-weight-normal\">Login</h1>\n\n\n    <label class=\"sr-only\">username</label>\n    <input type=\"username\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\" placeholder=\"username\" required\n        autofocus>\n\n\n    <label class=\"sr-only\">Password</label>\n    <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\" placeholder=\"Password\" required>\n\n    <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Login</button>\n\n</form>","import { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n})\nexport class NavbarComponent implements OnInit {\n  constructor(\n    private flashMessage: FlashMessagesService,\n    public authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {}\n  onLogoutClick() {\n    this.authService.logout();\n    this.flashMessage.show('You are logged out', {\n      cssClass: 'alert-success',\n      timeout: 3000,\n    });\n    this.router.navigate(['/login']);\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark mb-4\">\n    <a class=\"navbar-brand\" href=\"#\">Ekbana Task</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\"\n        aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n        <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item \" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['/']\">Home </a>\n            </li>\n\n\n        </ul>\n        <ul class=\"navbar-nav navbar-right\">\n            <li class=\"nav-item \" *ngIf=\"authService.loggedIn()\" [routerLinkActive]=\"['active']\"\n                [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['/dashbord']\">Dashbord </a>\n            </li>\n            <li class=\"nav-item \" *ngIf=\"authService.loggedIn()\" [routerLinkActive]=\"['active']\"\n                [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['/profile']\">Profile </a>\n            </li>\n            <li class=\"nav-item \" *ngIf=\"!authService.loggedIn()\" [routerLinkActive]=\"['active']\"\n                [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['/login']\">Login </a>\n            </li>\n            <li class=\"nav-item \" *ngIf=\"!authService.loggedIn()\" [routerLinkActive]=\"['active']\"\n                [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['/register']\">Register </a>\n            </li>\n            <li class=\"nav-item \" *ngIf=\"authService.loggedIn()\">\n                <a class=\"nav-link\" (click)=\"onLogoutClick()\" href=\"#\">Logout </a>\n            </li>\n\n\n        </ul>\n\n\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css'],\n})\nexport class ProfileComponent implements OnInit {\n  user: Object;\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit() {\n    this.authService.getProfile().subscribe(\n      (profile) => {\n        this.user = profile.user;\n      },\n      (err) => {\n        console.log(err);\n        return false;\n      }\n    );\n  }\n}\n","<!-- <div *ngIf=\"user\">\n    <h2 class=\"page-header\">{{user.name}}</h2>\n    <ul class=\"list-group\">\n        <li class=\"list-group-item\">Username : {{user.username}}</li>\n        <li class=\"list-group-item\">Email : {{user.email}}</li>\n    </ul>\n</div> -->\n\n<app-order> </app-order>","import { AuthService } from './../../services/auth.service';\nimport { ValidateService } from './../../services/validate.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent implements OnInit {\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n\n  dataRegister: any = {};\n\n  constructor(\n    private validateService: ValidateService,\n    private flashMessage: FlashMessagesService,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {}\n\n  onRegisterSubmit() {\n    const user = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password,\n    };\n\n    //require fields\n    if (!this.validateService.validateRegister(user)) {\n      this.flashMessage.show('Please fill in all fields', {\n        cssClass: 'alert-danger',\n        timeout: 3000,\n      });\n      return false;\n    }\n\n    //require emails\n    if (!this.validateService.validateEmail(user.email)) {\n      this.flashMessage.show('Give valid email', {\n        cssClass: 'alert-danger',\n        timeout: 3000,\n      });\n      return false;\n    }\n\n    //register user\n    this.authService.registerUser(user).subscribe((data) => {\n      this.dataRegister = data;\n\n      if (this.dataRegister.success) {\n        this.flashMessage.show('You are now registered and can login', {\n          cssClass: 'alert-success',\n          timeout: 3000,\n        });\n\n        this.router.navigate(['/login']);\n      } else {\n        this.flashMessage.show('Something went wrong', {\n          cssClass: 'alert-danger',\n          timeout: 3000,\n        });\n        this.router.navigate(['/register']);\n      }\n    });\n  }\n}\n","<form class=\"form-signin\" (submit)=\"onRegisterSubmit()\">\n    <h1 class=\"h3 mb-3 font-weight-normal\">Register</h1>\n\n\n    <label class=\"sr-only\">Name</label>\n    <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\" placeholder=\"Name\" required autofocus>\n\n\n    <label class=\"sr-only\">Username</label>\n    <input type=\"Username\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\" placeholder=\"Username\" required\n        autofocus>\n\n\n    <label class=\"sr-only\">Email address</label>\n    <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" placeholder=\"Email address\" required\n        autofocus>\n\n\n    <label class=\"sr-only\">Password</label>\n    <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\" placeholder=\"Password\" required>\n\n    <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Register</button>\n\n</form>","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor (private authService:AuthService, private router:Router){\n\n  }\n\n  canActivate() {\n    if(this.authService.loggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { OrderService } from '../shared/order.service';\nimport { Order } from '../shared/order.model';\n\ndeclare var M: any;\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.css'],\n  providers: [OrderService],\n})\nexport class OrderComponent implements OnInit {\n  constructor(public orderService: OrderService) {}\n\n  ngOnInit() {\n    this.resetForm();\n    this.refreshOrderList();\n  }\n\n  status: boolean = false;\n  btnText: string = 'Add Order';\n\n  showForm() {\n    if (this.status != false) {\n      this.btnText = 'Add Order';\n    } else {\n      this.btnText = 'Close';\n    }\n    this.status = !this.status;\n  }\n\n  resetForm(form?: NgForm) {\n    if (form) form.reset();\n    this.orderService.selectedOrder = {\n      _id: '',\n      productId: '',\n      productAmount: '',\n      userName: '',\n    };\n  }\n\n  onSubmit(form: NgForm) {\n    if (form.value._id == '') {\n      this.orderService.postOrder(form.value).subscribe((res) => {\n        this.resetForm(form);\n        this.refreshOrderList();\n        M.toast({ html: 'Saved successfully', classes: 'rounded' });\n      });\n    } else {\n      this.orderService.putOrder(form.value).subscribe((res) => {\n        this.resetForm(form);\n        this.refreshOrderList();\n        M.toast({ html: 'Updated successfully', classes: 'rounded' });\n      });\n    }\n  }\n\n  refreshOrderList() {\n    this.orderService.getOrderList().subscribe((res) => {\n      this.orderService.orders = res as Order[];\n    });\n  }\n\n  onEdit(ord: Order) {\n    this.orderService.selectedOrder = ord;\n  }\n\n  onDelete(_id: string, form: NgForm) {\n    if (confirm('Are you sure to Remove this order ?') == true) {\n      this.orderService.deleteOrder(_id).subscribe((res) => {\n        this.refreshOrderList();\n        this.resetForm(form);\n        M.toast({ html: 'Removed successfully', classes: 'rounded' });\n      });\n    }\n  }\n}\n","<div class=\"row\">\n    <div class=\"col s12\">\n        <div class=\"card\">\n            <div class=\"card-content white-text\">\n                <div class=\"row\">\n                    <div class=\"add-order h-flex h-flex-center \">\n                        <button class=\"btn btn-custom h-mb-40 \" type=\"submit\"\n                            (click)=\"showForm()\">{{this.btnText}}</button>\n                    </div>\n\n                    <div class=\"col s5\">\n                        <div [ngClass]=\"status ? 'h-visible' : 'h-hidden'\">\n\n                            <form #orderForm=\"ngForm\" (ngSubmit)=\"onSubmit(orderForm)\">\n                                <input type=\"hidden\" name=\"_id\" #_id=\"ngModel\"\n                                    [(ngModel)]=\"orderService.selectedOrder._id\">\n                                <div class=\"row\">\n                                    <div class=\"input-field col s12\">\n                                        <input type=\"text\" name=\"productId\" #name=\"ngModel\"\n                                            [(ngModel)]=\"orderService.selectedOrder.productId\"\n                                            placeholder=\"Give Product Id\" required>\n                                        <label>Product Id :\n                                            <label class=\"red-text\">*</label>\n                                        </label>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"input-field col s12\">\n                                        <input type=\"text\" name=\"productAmount\" #name=\"ngModel\"\n                                            [(ngModel)]=\"orderService.selectedOrder.productAmount\"\n                                            placeholder=\"how many?\">\n                                        <label>how many item :</label>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"input-field col s12\">\n                                        <input type=\"text\" name=\"userName\" #name=\"ngModel\"\n                                            [(ngModel)]=\"orderService.selectedOrder.userName\" placeholder=\"For Whom?\">\n                                        <label>User Name :</label>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"input-field col s12\">\n                                        <button class=\"btn btn-custom right\" type=\"button\"\n                                            (click)=\"resetForm(orderForm)\">Reset</button>\n                                        <button class=\"btn btn-custom right\" type=\"submit\"\n                                            [disabled]=\"!orderForm.valid\">Submit</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n\n\n                    <div class=\"col s7\">\n                        <table class=\"responsive-table highlight\">\n                            <thead>\n                                <tr>\n                                    <th>Product Id</th>\n                                    <th>Product Amount</th>\n                                    <th>To</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n                            <tr *ngFor=\"let ord of orderService.orders\">\n                                <td>{{ord.productId}}</td>\n                                <td>{{ord.productAmount}}</td>\n                                <td>{{ord.userName}}</td>\n                                <td>\n                                    <a class=\"action-btn\" (click)=\"onEdit(ord)\">\n                                        <i class=\"material-icons\">edit</i>\n                                    </a>\n                                    <a class=\"action-btn\" (click)=\"onDelete(ord._id,orderForm)\">\n                                        <i class=\"material-icons\">delete</i>\n                                    </a>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n\n  constructor(private http: HttpClient) {}\n\n  registerUser(user) {\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/register', user, {\n      headers: headers,\n    });\n  }\n  authenticateUser(user) {\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/authenticate', user, {\n      headers: headers,\n    });\n  }\n\n  getProfile(): any {\n    this.loadToken();\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      Authorization: this.authToken,\n    });\n    return this.http.get('http://localhost:1000/users/profile', {\n      headers: headers,\n    });\n  }\n\n  storeUserData(token, user) {\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken() {\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  loggedIn() {\n    if (this.authToken != null) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ValidateService {\n  constructor() {}\n  validateRegister(user) {\n    if (\n      user.name == undefined ||\n      user.email == undefined ||\n      user.username == undefined ||\n      user.password == undefined\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\n\nimport { Order } from './order.model';\n\n@Injectable()\nexport class OrderService {\n  selectedOrder: Order;\n  orders: Order[];\n  readonly baseURL = 'http://localhost:3000/orders';\n\n  constructor(private http: HttpClient) { }\n\n  postOrder(ord: Order) {\n    return this.http.post(this.baseURL, ord);\n  }\n\n  getOrderList() {\n    return this.http.get(this.baseURL);\n  }\n\n  putOrder(ord: Order) {\n    return this.http.put(this.baseURL + `/${ord._id}`, ord);\n  }\n\n  deleteOrder(_id: string) {\n    return this.http.delete(this.baseURL + `/${_id}`);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}